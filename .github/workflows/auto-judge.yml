name: judge
on:
  push:
    branches:
      - master
      - pipeline
  pull_request:
    branches:
      - master
      - pipeline
env:
  BUILD_TYPE: Release
  GH_TOKEN: ${{github.token}}
  DATASET_COMMIT: ""
jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache CMake
        id: cache-cmake
        uses: actions/cache@v4
        with:
          path: ${{github.workspace}}/bin
          key: ${{runner.os}}-cmake-${{hashFiles('src/**','include/**','judger/**')}}
      - name: Install dependencies
        if: steps.cache-cmake.outputs.cache-hit != 'true'
        run: sudo apt-get install -y build-essential cmake ninja-build
      - name: Build
        if: steps.cache-cmake.outputs.cache-hit != 'true'
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -G Ninja
      - name: Compile
        if: steps.cache-cmake.outputs.cache-hit != 'true'
        run: cmake --build ${{github.workspace}}/build --config ${BUILD_TYPE}
      - name: Upload bin directory
        uses: actions/upload-artifact@v4
        with:
          name: bin
          path: ${{github.workspace}}/bin
  load-data:
    runs-on: ubuntu-latest
    steps:
      - name: Get latest commit hash from Hugging Face
        run: echo "DATASET_COMMIT=$(git ls-remote https://huggingface.co/datasets/aostl/SHIT-testdata.git HEAD | awk '{print $1}')" >> $GITHUB_ENV
      - name: Cache data
        id: cache-data
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/testdata
          key: ${{ runner.os }}-data-${{ env.DATASET_COMMIT }}
      - name: Load data
        if: steps.cache-data.outputs.cache-hit != 'true'
        run: git clone https://huggingface.co/datasets/aostl/SHIT-testdata.git testdata
      - name: Upload testdata directory
        uses: actions/upload-artifact@v4
        with:
          name: testdata
          path: ${{github.workspace}}/testdata
  run-judger:
    runs-on: ubuntu-latest
    needs:
      - compile
      - load-data
    steps:
      - uses: actions/checkout@v4
      - name: Download bin directory
        uses: actions/download-artifact@v4
        with:
          name: bin
          path: ${{github.workspace}}/bin
      - name: Download testdata directory
        uses: actions/download-artifact@v4
        with:
          name: testdata
          path: ${{github.workspace}}/testdata
      - name: Check if files exist
        run: |
          ls -la bin
          ls -la testdata
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: "10.0"
      - name: Install Python
        run: sudo apt-get install -y python3 python3-pip
      - name: Granting operational privileges
        run: chmod +x ${{github.workspace}}/bin/compiler
      - name: Run Test
        run: python judger/main.py --llvm